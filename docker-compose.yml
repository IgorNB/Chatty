version: '2.1'

services:
  nginx:
    image: nginx:latest
    container_name: production_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8090:8090
      - 443:443
    depends_on:
      - chatty1
      - chatty2
  chatty1:
    environment:
      - POSTGRES_DB=chatty
      - SPRING_PROFILES_ACTIVE=rabbitMqWebSocketBroker, postgres, springDataJpa
    build: .
    ports:
      - 8091:8090
    depends_on:
      psql:
        condition: service_healthy
      rabbitmq-stomp:
        condition: service_started

  chatty2:
    environment:
      - POSTGRES_DB=chatty
      - SPRING_PROFILES_ACTIVE=rabbitMqWebSocketBroker, postgres, springDataJpa
    build: .
    ports:
      - 8092:8090
    depends_on:
      psql:
        condition: service_healthy
      rabbitmq-stomp:
        condition: service_started

  psql:
    container_name: psql
    image: postgres:alpine
    environment:
      - POSTGRES_DB=chatty
      - POSTGRES_PASSWORD=pwd
    expose:
      - 5432
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10

  rabbitmq-stomp:
    container_name: rabbitmq
    image: resilva87/docker-rabbitmq-stomp
    ports:
      - 5672:5672
      - 15672:15672
      - 61613:61613